---
openapi: 3.0.0
info:
  title: SportMonks SuperLeague API
  description: This is a simple API for SportMonks SuperLeague Denmark
  version: 2.0.0
servers:
- url: /
paths:
  /register:
    post:
      tags:
      - User
      summary: A new user adds to the system
      description: YAML object conntains all the details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        "201":
          description: A new user has been created
        "400":
          description: Wrong parameters
  /login:
    post:
      tags:
      - User
      summary: logs in to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "201":
          description: the user got in to the system
        "400":
          description: Wrong parameters
  /logout:
    post:
      tags:
      - User
      summary: logs out of the system
      responses:
        "200":
          description: the user got out of the system Sucs
        "400":
          description: Something went Wrong
  /teams/detailsById/{teamId}:
    get:
      tags:
      - Team
      parameters:
      - name: teamId
        in: path
        description: ID of team to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 85
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "404":
          description: Team not Found
  /teams/detailsByName/{teamName}:
    get:
      tags:
      - Team
      parameters:
      - name: teamName
        in: path
        description: name of team to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Silkeborg
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        "404":
          description: Team Not Found
  /teams/allTeams:
    get:
      tags:
      - Team
      responses:
        "200":
          description: All Super League teams sent
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/shortTeam'
        "400":
          description: Something went Wrong
  /player/fullDetails/{playerId}:
    get:
      tags:
      - Player
      parameters:
      - name: playerId
        in: path
        description: id of player to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 25057
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerFull'
        "404":
          description: Player Not Found
  /player/detailsByName/{playerName}:
    get:
      tags:
      - Player
      parameters:
      - name: playerName
        in: path
        description: write player name
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Peter
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerFull'
        "404":
          description: Player Not Found
  /player/allPlayers:
    get:
      tags:
      - Player
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerFull'
        "400":
          description: Something went Wrong
  /league/getDetails:
    get:
      tags:
      - League
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        "400":
          description: Something Went Worng
  /league/getCurStage:
    get:
      tags:
      - League
      responses:
        "200":
          description: successful stage data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
        "400":
          description: Something Went Worng
  /favorites/addGame:
    post:
      tags:
      - Favorites
      summary: adds fav game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "201":
          description: game was added to favs
        "400":
          description: Wrong parameters
  /favorites/delGame:
    post:
      tags:
      - Favorites
      summary: remove fav game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "201":
          description: game was removed
        "409":
          description: Game not found
  /favorites/getGames:
    get:
      tags:
      - Favorites
      summary: search fav games of user
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FutureGame'
        "400":
          description: Wrong parameters
  /manage/createGame:
    post:
      tags:
      - Manager
      summary: add game to system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGame'
        required: true
      responses:
        "201":
          description: the Game Created Successfully
        "400":
          description: Wrong parameters
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /manage/createEvent:
    post:
      tags:
      - Manager
      summary: add Event to game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      responses:
        "201":
          description: the Event Created Successfully
        "400":
          description: Wrong parameters
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /manage/enterScore:
    put:
      tags:
      - Manager
      summary: add Socre to game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGame'
        required: true
      responses:
        "201":
          description: the Game Updated Successfully
        "400":
          description: Wrong parameters
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
components:
  schemas:
    UserRegister:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: between 3 to 8 chars
          example: omer123
        firstname:
          type: string
          example: gal
        lastname:
          type: string
          example: zamir
        country:
          type: string
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: between 5 to 10 chars, at least one of them is a number and a special char
          format: password
          example: gal@123
        email:
          type: string
          format: email
          example: omer@gmail.com
        imageUrl:
          type: string
          format: URL
          example: https://en.wikipedia.org/wiki/Diego_Maradona#/media/File:Maradona-Mundial_86_con_la_copa.JPG
      description: containing user info
    UserLogin:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: between 3 to 8 chars
          example: omer
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: between 5 to 10 chars, at least one of them is a number and a special char
          format: password
          example: gal123!
      description: let user into the system
    Team:
      type: object
      properties:
        id:
          type: integer
          example: 85
        name:
          type: string
          example: Viborg
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerFull'
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game'
      description: Team's base properties
    shortTeam:
      type: object
      properties:
        id:
          type: integer
          example: 85
        name:
          type: string
          example: KÃ¸benhavn
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game'
    Player:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
        imageUrl:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
        position:
          type: integer
          example: 1
        team:
          type: string
          example: barca
      description: Player's base properties
    Coach:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
      description: Coach's base properties
    Game:
      type: object
      properties:
        game_id:
          type: integer
          example: 5
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585
        date_time:
          type: string
          example: 2021-05-15 20:30:00
        home_goals:
          type: integer
          example: 2
        away_goals:
          type: integer
          example: 2
        winner_team_id:
          type: integer
          example: 2585
        stadium:
          type: string
          example: Camp Nou
        referee_id:
          type: integer
          example: 2
      description: game's base properties
    FutureGame:
      type: object
      properties:
        game_id:
          type: integer
          example: 15
        date_time:
          type: string
          example: 2021-05-15 20:30:00
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585
        stadium:
          type: string
          example: Camp Nou
    PastGame:
      type: object
      properties:
        game_id:
          type: integer
          example: 5
        date_time:
          type: string
          example: 2021-05-15 20:30:00
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585
        stadium:
          type: string
          example: Camp Nou
        home_goals:
          type: integer
          example: 2
        away_goals:
          type: integer
          example: 2
        winner_team_id:
          type: integer
          example: 2585
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: 2020/2021
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
        next_match_details:
          $ref: '#/components/schemas/Game'
    PlayerFull:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
        team_name:
          type: string
          example: barca
        team_id:
          type: integer
          example: 96
        imageUrl:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
        position:
          type: integer
          example: 1
        common_name:
          type: string
          example: messi
        nationality:
          type: string
          example: israel
        birthDate:
          type: string
          example: 12/02/2021
        birthCountry:
          type: string
          example: israel
        height:
          type: string
          example: 165 cm
        weight:
          type: string
          example: 70 kg
    Event:
      type: object
      properties:
        id:
          type: integer
          example: 123
        date_time:
          type: string
          example: 2021-05-15 20:30:00
        minute:
          type: integer
          example: 32
        description:
          type: string
          example: yellow card
    CreateEvent:
      type: object
      properties:
        game_id:
          type: integer
          example: 8
        minute:
          type: integer
          example: 32
        description:
          type: string
          example: yellow card
    Stage:
      type: object
      properties:
        futureGames:
          type: array
          items:
            $ref: '#/components/schemas/FutureGame'
        pastGames:
          type: array
          items:
            $ref: '#/components/schemas/PastGame'
    CreateGame:
      type: object
      properties:
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585
        date_time:
          type: string
          example: 2021-05-15 20:30:00
        stadium:
          type: string
          example: Camp Nou
        referee_id:
          type: integer
          example: 2
      description: game's base properties
    UpdateGame:
      type: object
      properties:
        game_id:
          type: integer
          example: 5
        home_goals:
          type: integer
          example: 2
        away_goals:
          type: integer
          example: 2
      description: game's base properties
    body:
      type: object
      properties:
        id:
          type: integer
          example: 6
    body_1:
      type: object
      properties:
        id:
          type: integer
          example: 6
