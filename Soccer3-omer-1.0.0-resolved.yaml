---
openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Soccer3/omer/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /register:
    post:
      tags:
      - Reg
      summary: A new user adds to the system
      description: YAML object conntains all the details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        "201":
          description: A new user has been created
        "400":
          description: Wrong parameters
  /login:
    post:
      tags:
      - Log
      summary: logs in to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "201":
          description: the user got in to the system
        "400":
          description: Wrong parameters
  /team/{teamId}:
    get:
      tags:
      - teamId
      parameters:
      - name: teamId
        in: path
        description: ID of team to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 123
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "400":
          description: Wrong parameters
  /team/{teamName}:
    get:
      tags:
      - teamName
      parameters:
      - name: teamName
        in: path
        description: name of team to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: fc Barcelona
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "400":
          description: Wrong parameters
  /player/{playerId}:
    get:
      tags:
      - playerId
      parameters:
      - name: playerId
        in: path
        description: id of player to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 123
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        "400":
          description: Wrong parameters
  /coach/{coachId}:
    get:
      tags:
      - coachId
      parameters:
      - name: coachId
        in: path
        description: id of Coach to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 123
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coach'
        "400":
          description: Wrong parameters
  /league/{leagueId}:
    get:
      tags:
      - leagueId
      parameters:
      - name: leagueId
        in: path
        description: id of league to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 123
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        "400":
          description: Wrong parameters
  /favorites/game:
    post:
      tags:
      - addFav
      summary: adds fav game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      responses:
        "201":
          description: game was added to favs
        "400":
          description: Wrong parameters
  /favorites/player:
    post:
      tags:
      - addFav
      summary: adds fav player
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        "201":
          description: player was added to favs
        "400":
          description: Wrong parameters
  /favorites/team:
    post:
      tags:
      - addFav
      summary: adds fav team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        "201":
          description: team was added to favs
        "400":
          description: Wrong parameters
  /favorites/game/{userId}:
    get:
      tags:
      - getFav
      summary: search fav games of user
      parameters:
      - name: userId
        in: path
        description: return fav games of user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 123
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        "400":
          description: Wrong parameters
  /favorites/player/{userId}:
    get:
      tags:
      - getFav
      summary: search fav players of user
      parameters:
      - name: userId
        in: path
        description: return fav players of user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 123
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        "400":
          description: Wrong parameters
  /favorites/team/{userId}:
    get:
      tags:
      - getFav
      summary: search fav teams of user
      parameters:
      - name: userId
        in: path
        description: return fav teams of user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 123
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        "400":
          description: Wrong parameters
components:
  schemas:
    UserRegister:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: between 3 to 8 chars
          example: omer123
        firstname:
          type: string
          example: gal
        lastname:
          type: string
          example: zamir
        country:
          type: string
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: between 5 to 10 chars, at least one of them is a number and a special char
          format: password
          example: gal@123
        email:
          type: string
          format: email
          example: omer@gmail.com
        image-url:
          type: string
          format: URL
          example: https://facebook.com/profilepic/galzamir
      description: containing user info
    UserLogin:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: between 3 to 8 chars
          example: omer123
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: between 5 to 10 chars, at least one of them is a number and a special char
          format: password
          example: gal@123
      description: let user into the system
    Team:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: FC Barcelona
        season:
          type: string
          example: 2010/2011
      description: Team's base properties
    Player:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
      description: Player's base properties
    Coach:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
      description: Coach's base properties
    Game:
      type: object
      properties:
        id:
          type: integer
          example: 234
        hasBeen:
          type: boolean
          example: true
      description: game's base properties
    League:
      type: object
      properties:
        id:
          type: integer
          example: 567
        season:
          type: string
          example: 2010/2011
      description: league's base properties
